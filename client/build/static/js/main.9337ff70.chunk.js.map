{"version":3,"sources":["components/memoryData.js","components/memoryCard.js","components/memoryList.js","components/addMemory.js","components/navbar.js","components/login.js","components/signup.js","components/quote.js","App.js","serviceWorker.js","index.js"],"names":["getMemories","_getMemories","apply","this","arguments","_callee","response","regenerator_default","a","wrap","_context","prev","next","fetch","sent","abrupt","json","stop","_callee4","data","_context4","axios","post","then","res","catch","err","_callee5","_context5","_callee6","id","_context6","concat","method","headers","Content-Type","App","props","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","changeHandler","e","memory","state","target","name","value","setState","UpdateMemory","_x5","_UpdateMemory","updated","status","toastr","success","error","setMemory","dltMemory","_x6","_deleteMemory","deleteMemory","_id","title","body","_this2","react_default","createElement","className","onClick","clickFunction","data-target","ref","Modal","onSubmit","type","onChange","placeholder","Dismentle","React","Component","componentDidMount","memories","loading","firstLoad","document","map","_React$createElement","memoryCard_App","key","defineProperty","AddMemory","content","addMemory","event","preventDefault","_x4","_addMemory","history","push","Navbar","logout","localStorage","clear","react_router_dom","to","getItem","withRouter","Login","username","password","token","vusername","vusernametext","vpassword","vpasswordtext","vauthenticate","vauthenticatetext","handleChange","handleSubmit","model","email","setItem","non_field_errors","console","log","htmlFor","Signup","first_name","last_name","gender","vfname","vfnametext","vlname","vlnametext","vemail","vemailtext","handleRadioChange","firstname","lastname","Quote","quote","verifyToken","getQuote","server","_this3","get","Accept","contents","quotes","author","navbar","react_router","exact","path","component","MemoryList","Boolean","window","location","hostname","match","interceptors","use","detail","reload","Promise","reject","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9337ff70.chunk.js","sourcesContent":["import axios from 'axios';\n\n// const API_URL = 'http://localhost:5000/';\n\nexport async function getMemories() {\n  let response = await fetch(`/posts/memories`);\n  return response.json();\n}\n\nexport async function getMemory(id) {\n  let response = await fetch(`/memories/${id}`);\n  return response.json();\n}\n\nexport async function updateMemory(id, data) {\n  return fetch(`/memories/${id}`, {\n    method: 'PATCH',\n    body: JSON.stringify(data),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  })\n    .then(res => {\n      console.log(res);\n      return res;\n    })\n    .catch(err => err);\n}\n\nexport async function addMemory(data) {\n  return (\n    axios\n      .post(`/posts/memories`, data)\n      //  return fetch(`${API_URL}memories`, {\n      //  method: \"POST\",\n      //  body: JSON.stringify(data),\n      //  headers: {\n      //    \"Content-Type\": \"application/json\"\n      //  }\n      //  })\n      .then(res => res)\n      .catch(err => err)\n  );\n}\nexport async function UpdateMemory(data) {\n  return axios\n    .post(`/posts/update`, data)\n    .then(res => res)\n    .catch(err => err);\n}\n\nexport async function deleteMemory(id) {\n  return fetch(`/posts/${id}`, {\n    method: 'DELETE',\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  })\n    .then(res => {\n      return res;\n    })\n    .catch(err => err);\n}\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport { UpdateMemory, deleteMemory } from './memoryData';\nimport toastr from 'toastr';\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: 0,\n      success: false,\n      memory: {\n        title: '',\n        body: ''\n      }\n    };\n  }\n\n  // async componentDidMount() {\n  //   this.setState({ id: this.props.id });\n  // }\n  componentDidMount() {\n    this.setState({ id: this.props.id });\n    const options = {\n      inDuration: 250,\n      outDuration: 250,\n      opacity: 0.5,\n      dismissible: false\n    };\n    //M.Modal.init(this.Modal, options);\n  }\n\n  async componentDidUpdate() {\n    if (this.props.id !== this.state.id) {\n      this.setState({ id: this.props.id });\n    }\n  }\n  changeHandler = e => {\n    let memory = this.state.memory;\n    memory[e.target.name] = e.target.value;\n    this.setState({ memory });\n  };\n  UpdateMemory = () => {\n    UpdateMemory(this.state.memory).then(response => {\n      this.props.updated();\n      if (response.status == 200) {\n        toastr.success('Memory Updated Successfully');\n      } else {\n        toastr.error(\n          'Cannot Update a Memory!!! kindly check your console for more information'\n        );\n      }\n    });\n  };\n  setMemory = () => {\n    this.setState({ memory: this.props.memory });\n  };\n  dltMemory = () => {\n    deleteMemory(this.props.memory._id).then(response => {\n      this.props.updated();\n      if (response.status == 200) {\n        toastr.success('Memory Deleted Successfully');\n      } else {\n        toastr.error(\n          'Cannot Delete a Memory!!! kindly check your console for more information'\n        );\n      }\n    });\n  };\n  render() {\n    return (\n      <div className='col m3 s12 memoryCard' onClick={this.props.clickFunction}>\n        <div className='card darken-1 center-align'>\n          <div className='card-body '>\n            <h2>{this.props.title}</h2>\n            <p>{this.props.body}</p>\n          </div>\n          <div className='card-action'>\n            <div className='row mb0'>\n              <div className='col m6'>\n                <a\n                  className='btn modal-trigger'\n                  data-target={'modal1' + this.props.id}\n                  onClick={this.setMemory}>\n                  <i className='material-icons'>edit</i>\n                </a>\n                <div\n                  ref={Modal => {\n                    this.Modal = Modal;\n                  }}\n                  id={'modal1' + this.props.id}\n                  className='modal'>\n                  <div className='modal-content'>\n                    <h4>Update Memory</h4>\n                    <form onSubmit={this.UpdateMemory}>\n                      <label>Memory Title</label>\n                      <input\n                        type='text'\n                        name='title'\n                        value={this.state.memory ? this.state.memory.title : ''}\n                        onChange={this.changeHandler}\n                        placeholder='Give your memory a name'\n                      />\n                      <label> Memory Description</label>\n                      <input\n                        type='text'\n                        name='body'\n                        value={this.state.memory ? this.state.memory.body : ''}\n                        onChange={this.changeHandler}\n                        placeholder='Describe your memory'\n                      />\n                    </form>\n                  </div>\n                  <div className='modal-footer'>\n                    <a\n                      className='modal-close waves-effect waves-red red btn-flat'\n                      onClick={this.Dismentle}>\n                      Cancel\n                    </a>\n                    <a\n                      className='modal-close waves-effect waves-green green btn-flat'\n                      onClick={this.UpdateMemory}>\n                      Update\n                    </a>\n                  </div>\n                </div>\n              </div>\n              <div className='col m6'>\n                <a className='btn' onClick={this.dltMemory}>\n                  <i className='material-icons'>delete</i>\n                </a>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Switch, Route, NavLink } from 'react-router-dom';\nimport MemoryCard from './memoryCard';\nimport { getMemories } from './memoryData';\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      memories: [],\n      loading: true,\n      firstLoad: true\n    };\n  }\n\n  async componentDidMount() {\n    document.title = 'Home';\n    let memories = await getMemories();\n    this.setState({ memories: memories, loading: false });\n    // console.log(this.state);\n  }\n  updated = () => {\n    this.componentDidMount();\n  };\n  render() {\n    return (\n      <div className='memoryList'>\n        <h1>My memories</h1>\n        <div className='row'>\n          {this.state.memories.map(memory => {\n            return (\n              <MemoryCard\n                id={memory.id}\n                key={memory._id}\n                title={memory.title}\n                body={memory.body}\n                id={memory._id}\n                memory={memory}\n                updated={this.updated}\n              />\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { addMemory } from './memoryData';\nimport { NavLink } from 'react-router-dom';\nimport toastr from 'toastr';\nexport default class AddMemory extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      content: {\n        title: '',\n        body: ' '\n      }\n    };\n  }\n\n  // handleTitleChange = event => {\n  //   var content =  this.state.content;\n  //   content.title = event.target.value;\n  //   this.setState({content:content}, () => {\n  //     console.log(this.state.content.title);\n  //   });\n  // };\n\n  // handleBodyChange = event => {\n  //   var content =  this.state.content;\n  //   content.body = event.target.value;\n  //   this.setState({content:content}, () => {\n  //     console.log(this.state.content.title);\n  //   });\n  // };\n  changeHandler = e => {\n    var content = this.state.content;\n    content[e.target.name] = e.target.value;\n    this.setState({ content });\n  };\n\n  addMemory = event => {\n    event.preventDefault();\n    addMemory(this.state.content).then(response => {\n      if (response.data) {\n        if (response.data._id) {\n          toastr.success('Memory Added Successfully');\n          this.props.history.push('/memories');\n        } else {\n          toastr.error(\n            'Cannot add a Memory!!! kindly check your console for more information'\n          );\n        }\n      }\n      // alert(`New Message with id ${response} created!`);\n    });\n  };\n\n  componentDidMount = () => {\n    document.title = 'Add a memory';\n  };\n\n  render() {\n    return (\n      <div className='addMemory'>\n        <h1> Add a new memory </h1>\n        <form onSubmit={this.addMemory}>\n          <label>Memory Title</label>\n          <input\n            type='text'\n            name='title'\n            onChange={this.changeHandler}\n            placeholder='Give your memory a name'\n          />\n          <label> Memory Description</label>\n          <input\n            type='text'\n            name='body'\n            onChange={this.changeHandler}\n            placeholder='Describe your memory'\n          />\n          {/* <input type='submit' className='btn btn-primary' /> */}\n          <button\n            className='btn waves-effect waves-light'\n            type='submit'\n            name='action'>\n            Submit\n            <i className='material-icons right'>send</i>\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Link, NavLink, withRouter } from 'react-router-dom';\nimport axios from 'axios';\n\nimport { server } from '../global';\n\n\nclass Navbar extends Component {\n\n    logout = () => {\n        localStorage.clear();\n        this.props.history.push('/login');\n    }\n\n    render() {\n        return (\n            <nav className=\"nav-wrapper indigo\">\n                <div className=\"container\">\n                    <Link to=\"/\" className=\"brand-logo fontWeight\">Memory Journal</Link>\n                    {\n                        localStorage.getItem('token') != null ? (\n                        <ul id=\"nav-mobile\" className=\"right hide-on-small-and-down\">\n                            <li><Link to=\"/memories\">My Memories</Link></li>\n                            <li><Link to=\"/add\">Add a Memory</Link></li>\n                            <li><Link to=\"/quote\">Quote</Link></li>\n                            <li>\n                                <NavLink to=\"/login\">\n                                    <i className=\"material-icons\" onClick={this.logout}>power_settings_new</i>\n                                </NavLink>\n                            </li>\n                        </ul> ) : (\n                            null\n                        )\n                    }\n                </div>\n            </nav>\n        );\n    }\n}\n\nexport default withRouter(Navbar);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\n// import Spinner from '../spinner-service/spinner-service';\n// import { server } from '../global';\n// import Position from '../toast-service/toast-service';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nclass Login extends Component {\n  state = {\n    username: '',\n    password: '',\n    token: '',\n    vusername: false,\n    vusernametext: '',\n    vpassword: false,\n    vpasswordtext: '',\n    vauthenticate: false,\n    vauthenticatetext: ''\n  };\n\n  componentDidMount() {\n    if (localStorage.getItem('token') != null) {\n      this.props.history.push('/memories');\n    }\n  }\n\n  handleChange = e => {\n    this.setState({\n      [e.target.id]: e.target.value\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    let model = {\n      email: this.state.username,\n      password: this.state.password\n    };\n    this.setState({\n      vusername: false,\n      vusernametext: '',\n      vpassword: false,\n      vpasswordtext: '',\n      vauthenticate: false,\n      vauthenticatetext: ''\n    });\n    axios\n      .post('/users/login', model)\n      .then(data => {\n        this.setState({\n          token: data.data.token\n        });\n        localStorage.setItem('token', this.state.token);\n        this.props.history.push('/memories');\n      })\n      .catch(error => {\n        try {\n          if (error.response.data.username) {\n            this.setState({\n              vusername: true,\n              vusernametext: error.response.data.username[0]\n            });\n          }\n          if (error.response.data.password) {\n            this.setState({\n              vpassword: true,\n              vpasswordtext: error.response.data.password[0]\n            });\n          }\n          if (error.response.data.non_field_errors) {\n            this.setState({\n              vauthenticate: true,\n              vauthenticatetext: error.response.data.non_field_errors[0]\n            });\n          }\n        } catch (error) {\n          console.log(error.response);\n        }\n      });\n  };\n\n  render() {\n    return (\n      <div className='container'>\n        <br />\n        <h3 className='grey-text darken-4 center'>\n          Welcome to the Memory Journal\n        </h3>\n        <hr />\n        <br />\n        <h4 className='indigo-text darken-4'>Login</h4>\n        <form onSubmit={this.handleSubmit}>\n          <div className='row'>\n            <div className='input-field col s12'>\n              <i className='material-icons prefix'>account_circle</i>\n              <input id='username' type='text' onChange={this.handleChange} />\n              <label htmlFor='username'>Username:</label>\n              <span className='red-text helper-text' id='vusername'>\n                {this.state.vusername ? this.state.vusernametext : ''}\n              </span>\n            </div>\n            <div className='input-field col s12'>\n              <i className='material-icons prefix'>lock</i>\n              <input\n                id='password'\n                type='password'\n                onChange={this.handleChange}\n              />\n              <label htmlFor='password'>Password:</label>\n              <span className='red-text helper-text' id='vpassword'>\n                {this.state.vpassword ? this.state.vpasswordtext : ''}\n              </span>\n            </div>\n            <p className='red-text'>\n              {this.state.vauthenticate ? this.state.vauthenticatetext : ''}\n            </p>\n            <div className='row'>\n              <div className='input-field col s12'>\n                <button\n                  className='waves-effect waves-light btn white-text blue darken-4 pull'\n                  type='submit'>\n                  Submit\n                </button>\n              </div>\n              <Link to='/signup' className=''>\n                create new account\n              </Link>\n              {/* <a href=\"/signup\"> */}\n              {/* <span className=\"text-small mt-0\"></span> */}\n              {/* </a> */}\n            </div>\n          </div>\n        </form>\n        {/* <Position />  */}\n        {/* <Spinner /> */}\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import React, { Component } from 'react';\nimport axios from 'axios';\n\n// import { server } from '../global';\n\nclass Signup extends Component {\n  state = {\n    first_name: '',\n    last_name: '',\n    email: '',\n    username: '',\n    password: '',\n    gender: '',\n    vfname: false,\n    vfnametext: '',\n    vlname: false,\n    vlnametext: '',\n    vusername: false,\n    vusernametext: '',\n    vemail: false,\n    vemailtext: '',\n    vpassword: false,\n    vpasswordtext: ''\n  };\n\n  componentDidMount() {\n    if (localStorage.getItem('token') != null) {\n      this.props.history.push('/memories');\n    }\n  }\n\n  handleChange = e => {\n    this.setState({\n      [e.target.id]: e.target.value\n    });\n  };\n  handleRadioChange = e => {\n    this.setState({\n      [e.target.name]: e.target.id\n    });\n  };\n  handleSubmit = e => {\n    e.preventDefault();\n    let model = {\n      firstname: this.state.first_name,\n      lastname: this.state.last_name,\n      email: this.state.email,\n      username: this.state.username,\n      password: this.state.password,\n      gender: this.state.gender\n    };\n    this.setState({\n      vfname: false,\n      vfnametext: '',\n      vlname: false,\n      vlnametext: '',\n      vusername: false,\n      vusernametext: '',\n      vemail: false,\n      vemailtext: '',\n      vpassword: false,\n      vpasswordtext: ''\n    });\n    axios\n      .post('/users/signup', model)\n      .then(data => {\n        console.log(data);\n        this.props.history.push('/login');\n      })\n      .catch(error => {\n        try {\n          if (error.response.data.first_name) {\n            this.setState({\n              vfname: true,\n              vfnametext: error.response.data.first_name[0]\n            });\n          }\n          if (error.response.data.last_name) {\n            this.setState({\n              vlname: true,\n              vlnametext: error.response.data.last_name[0]\n            });\n          }\n          if (error.response.data.username) {\n            this.setState({\n              vusername: true,\n              vusernametext: error.response.data.username[0]\n            });\n          }\n          if (error.response.data.email) {\n            this.setState({\n              vemail: true,\n              vemailtext: error.response.data.email[0]\n            });\n          }\n          if (error.response.data.password) {\n            this.setState({\n              vpassword: true,\n              vpasswordtext: error.response.data.password[0]\n            });\n          }\n        } catch (error) {\n          console.log(error.response);\n        }\n      });\n  };\n\n  render() {\n    return (\n      <div className='container'>\n        <br />\n        <h3 className='indigo-text darken-4 center-text'>Sign Up</h3>\n        <form onSubmit={this.handleSubmit}>\n          <div className='row'>\n            <div className='input-field col s4'>\n              <input id='first_name' type='text' onChange={this.handleChange} />\n              <label htmlFor='first_name'>First Name:</label>\n              <span className='red-text helper-text' id='vfname'>\n                {this.state.vfname ? this.state.vfnametext : ''}\n              </span>\n            </div>\n            <div className='input-field col s4'>\n              <input id='last_name' type='text' onChange={this.handleChange} />\n              <label htmlFor='last_name'>Last Name:</label>\n              <span className='red-text helper-text' id='vfname'>\n                {this.state.vlname ? this.state.vlnametext : ''}\n              </span>\n            </div>\n            <div className='input-field col s2'>\n              <p>\n                <label>\n                  <input\n                    id='male'\n                    className='with-gap'\n                    name='gender'\n                    value='male'\n                    type='radio'\n                    onChange={this.handleRadioChange}\n                  />\n                  <span>Male</span>\n                </label>\n              </p>\n            </div>\n            <div className='input-field col s2'>\n              <p>\n                <label>\n                  <input\n                    id='female'\n                    className='with-gap'\n                    name='gender'\n                    value='female'\n                    type='radio'\n                    onChange={this.handleRadioChange}\n                  />\n                  <span>Female</span>\n                </label>\n              </p>\n            </div>\n          </div>\n          <div className='row'>\n            <div className='input-field col s12'>\n              <input id='username' type='text' onChange={this.handleChange} />\n              <label htmlFor='username'>Username:</label>\n              <span className='red-text helper-text' id='vusername'>\n                {this.state.vusername ? this.state.vusernametext : ''}\n              </span>\n            </div>\n            <div className='input-field col s12'>\n              <input id='email' type='email' onChange={this.handleChange} />\n              <label htmlFor='email'>Email:</label>\n              <span className='red-text helper-text' id='vemail'>\n                {this.state.vemail ? this.state.vemailtext : ''}\n              </span>\n            </div>\n            <div className='input-field col s12'>\n              <input\n                id='password'\n                type='password'\n                onChange={this.handleChange}\n              />\n              <label htmlFor='password'>Password:</label>\n              <span className='red-text helper-text' id='vpassword'>\n                {this.state.vpassword ? this.state.vpasswordtext : ''}\n              </span>\n            </div>\n            <div className='row'>\n              <div className='input-field col s12'>\n                <button\n                  className='waves-effect waves-light btn white-text blue darken-4'\n                  type='submit'>\n                  Submit\n                </button>\n              </div>\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Signup;\n","import React, { Component } from 'react';\nimport axios from 'axios';\n\nimport { server } from '../global';\n\n\nclass Quote extends Component {\n    state = {\n        quote: {}\n    };\n    \n    componentDidMount() {\n        this.verifyToken();\n        this.getQuote();\n    }\n\n    verifyToken() {\n        let model = {\n            token: localStorage.getItem('token')\n        };\n        if(localStorage.getItem('token') == null) {\n            this.props.history.push('/login');\n        } else if(localStorage.getItem('token') != null) {\n            axios.post(server + '/auth-jwt-verify/', model)\n            .then(data => {\n                console.log('token verify', data);\n            })\n            .catch(error => {\n                console.log('token verify error', error);\n                localStorage.clear();\n                this.props.history.push('/login');\n            });\n        }\n    }\n\n    getQuote() {\n        axios.get('https://quotes.rest/qod', { headers: { \"Accept\": \"application/json\" }})\n            .then(data => {\n                console.log(data.data);\n                this.setState({\n                    quote: data.data.contents.quotes[0]\n                });\n            })\n            .catch(error => {\n                console.log(error);\n            }\n        )\n    }\n\n    render() {\n        const quote = this.state.quote ? (\n            <div className=\"row\">\n                <div className=\"col s12\">\n                    <div className=\"card blue-grey darken-1\">\n                        <div className=\"card-content white-text\">\n                            <h4 className=\"card-title\">{ this.state.quote.title }</h4>\n                            <hr />\n                            <p className=\"flow-text quote\">{ this.state.quote.quote }</p>\n                            <br />\n                            <h5 className=\"yellow-text\">- { this.state.quote.author }</h5>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            ) : (\n            <div className='center mt-5 white-text'>Loading quote...</div>\n        );\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col s12\">\n                        <br />\n                        <h3 className='black-text accent-4s'>Quote of the Day</h3>\n                    </div>\n                </div>\n                { quote }\n            </div>\n        );\n    }\n}\n\nexport default Quote;","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nimport './styles.css';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\n\n\nimport MemoryCard from './components/memoryCard';\nimport { getMemories } from \"./components/memoryData\";\nimport MemoryList from \"./components/memoryList\"\nimport AddMemory from './components/addMemory';\nimport Navbar from './components/navbar';\nimport Login from './components/login';\nimport Signup from './components/signup';\nimport Quote from './components/quote';\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state ={\n      memories : []\n    };\n  }\n\n  async componentDidMount(){\n    document.title = \"Home\";\n    let memories = await getMemories();\n    this.setState({ memories: memories});\n  }\n\n  render(){\n    return (\n        <BrowserRouter>\n            <div className=\"App\">\n                <Navbar />\n                <Switch> {/* allows Only One Route to be displayed  */}\n                    <Route exact path='/' component={Login} />\n                    <Route path='/login' component={Login} />\n                    <Route path='/signup' component={Signup} />\n                    <Route path='/quote' component={Quote} />\n                    <Route path='/add' component={AddMemory} />\n                    <Route path='/memories' component={MemoryList} />\n                </Switch>\n            </div>\n        </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport axios from \"axios\";\n\naxios.interceptors.response.use(response => {\n    return response;\n  },\n  error => {\n    try {\n        if (error.response.data.detail === 'Signature has expired.' || error.response.data.detail === 'Error decoding signature.' ||\n            error.response.data.detail === 'Invalid Authorization header. Credentials string should not contain spaces.' || \n            error.response.non_field_errors === 'Error decoding signature.') {\n            localStorage.clear();\n            window.location.reload();\n        }\n    }\n    catch(error) {\n        console.log(error);\n    }\n    return Promise.reject(error);\n  }\n);\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}