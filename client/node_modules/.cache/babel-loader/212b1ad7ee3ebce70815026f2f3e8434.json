{"ast":null,"code":"var _jsxFileName = \"/Users/leylafiratli/Desktop/project/client/src/components/memoryCard.js\";\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { UpdateMemory, deleteMemory } from './memoryData';\nimport toastr from 'toastr';\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.changeHandler = e => {\n      let memory = this.state.memory;\n      memory[e.target.name] = e.target.value;\n      this.setState({\n        memory\n      });\n    };\n\n    this.UpdateMemory = () => {\n      UpdateMemory(this.state.memory).then(response => {\n        this.props.updated();\n\n        if (response.status == 200) {\n          toastr.success('Memory Updated Successfully');\n        } else {\n          toastr.error('Cannot Update a Memory!!! kindly check your console for more information');\n        }\n      });\n    };\n\n    this.setMemory = () => {\n      this.setState({\n        memory: this.props.memory\n      });\n    };\n\n    this.dltMemory = () => {\n      deleteMemory(this.props.memory._id).then(response => {\n        this.props.updated();\n\n        if (response.status == 200) {\n          toastr.success('Memory Deleted Successfully');\n        } else {\n          toastr.error('Cannot Delete a Memory!!! kindly check your console for more information');\n        }\n      });\n    };\n\n    this.state = {\n      id: 0,\n      success: false,\n      memory: {\n        title: '',\n        body: ''\n      }\n    };\n  } // async componentDidMount() {\n  //   this.setState({ id: this.props.id });\n  // }\n\n\n  componentDidMount() {\n    this.setState({\n      id: this.props.id\n    });\n    const options = {\n      inDuration: 250,\n      outDuration: 250,\n      opacity: 0.5,\n      dismissible: false\n    }; //M.Modal.init(this.Modal, options);\n  }\n\n  async componentDidUpdate() {\n    if (this.props.id !== this.state.id) {\n      this.setState({\n        id: this.props.id\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"col m3 s12 memoryCard\",\n      onClick: this.props.clickFunction,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card darken-1 center-align\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-body \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, this.props.title), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, this.props.body)), React.createElement(\"div\", {\n      className: \"card-action\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row mb0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col m6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      className: \"btn modal-trigger\",\n      \"data-target\": 'modal1' + this.props.id,\n      onClick: this.setMemory,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"material-icons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"edit\")), React.createElement(\"div\", {\n      ref: Modal => {\n        this.Modal = Modal;\n      },\n      id: 'modal1' + this.props.id,\n      className: \"modal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"modal-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Update Memory\"), React.createElement(\"form\", {\n      onSubmit: this.UpdateMemory,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Memory Title\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"title\",\n      value: this.state.memory ? this.state.memory.title : '',\n      onChange: this.changeHandler,\n      placeholder: \"Give your memory a name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \" Memory Description\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"body\",\n      value: this.state.memory ? this.state.memory.body : '',\n      onChange: this.changeHandler,\n      placeholder: \"Describe your memory\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"modal-footer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      className: \"modal-close waves-effect waves-red red btn-flat\",\n      onClick: this.Dismentle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"Cancel\"), React.createElement(\"a\", {\n      className: \"modal-close waves-effect waves-green green btn-flat\",\n      onClick: this.UpdateMemory,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"Update\")))), React.createElement(\"div\", {\n      className: \"col m6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      className: \"btn\",\n      onClick: this.dltMemory,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"material-icons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"delete\")))))));\n  }\n\n}","map":{"version":3,"sources":["/Users/leylafiratli/Desktop/project/client/src/components/memoryCard.js"],"names":["React","NavLink","UpdateMemory","deleteMemory","toastr","App","Component","constructor","props","changeHandler","e","memory","state","target","name","value","setState","then","response","updated","status","success","error","setMemory","dltMemory","_id","id","title","body","componentDidMount","options","inDuration","outDuration","opacity","dismissible","componentDidUpdate","render","clickFunction","Modal","Dismentle"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport { UpdateMemory, deleteMemory } from './memoryData';\nimport toastr from 'toastr';\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: 0,\n      success: false,\n      memory: {\n        title: '',\n        body: ''\n      }\n    };\n  }\n\n  // async componentDidMount() {\n  //   this.setState({ id: this.props.id });\n  // }\n  componentDidMount() {\n    this.setState({ id: this.props.id });\n    const options = {\n      inDuration: 250,\n      outDuration: 250,\n      opacity: 0.5,\n      dismissible: false\n    };\n    //M.Modal.init(this.Modal, options);\n  }\n\n  async componentDidUpdate() {\n    if (this.props.id !== this.state.id) {\n      this.setState({ id: this.props.id });\n    }\n  }\n  changeHandler = e => {\n    let memory = this.state.memory;\n    memory[e.target.name] = e.target.value;\n    this.setState({ memory });\n  };\n  UpdateMemory = () => {\n    UpdateMemory(this.state.memory).then(response => {\n      this.props.updated();\n      if (response.status == 200) {\n        toastr.success('Memory Updated Successfully');\n      } else {\n        toastr.error(\n          'Cannot Update a Memory!!! kindly check your console for more information'\n        );\n      }\n    });\n  };\n  setMemory = () => {\n    this.setState({ memory: this.props.memory });\n  };\n  dltMemory = () => {\n    deleteMemory(this.props.memory._id).then(response => {\n      this.props.updated();\n      if (response.status == 200) {\n        toastr.success('Memory Deleted Successfully');\n      } else {\n        toastr.error(\n          'Cannot Delete a Memory!!! kindly check your console for more information'\n        );\n      }\n    });\n  };\n  render() {\n    return (\n      <div className='col m3 s12 memoryCard' onClick={this.props.clickFunction}>\n        <div className='card darken-1 center-align'>\n          <div className='card-body '>\n            <h2>{this.props.title}</h2>\n            <p>{this.props.body}</p>\n          </div>\n          <div className='card-action'>\n            <div className='row mb0'>\n              <div className='col m6'>\n                <a\n                  className='btn modal-trigger'\n                  data-target={'modal1' + this.props.id}\n                  onClick={this.setMemory}>\n                  <i className='material-icons'>edit</i>\n                </a>\n                <div\n                  ref={Modal => {\n                    this.Modal = Modal;\n                  }}\n                  id={'modal1' + this.props.id}\n                  className='modal'>\n                  <div className='modal-content'>\n                    <h4>Update Memory</h4>\n                    <form onSubmit={this.UpdateMemory}>\n                      <label>Memory Title</label>\n                      <input\n                        type='text'\n                        name='title'\n                        value={this.state.memory ? this.state.memory.title : ''}\n                        onChange={this.changeHandler}\n                        placeholder='Give your memory a name'\n                      />\n                      <label> Memory Description</label>\n                      <input\n                        type='text'\n                        name='body'\n                        value={this.state.memory ? this.state.memory.body : ''}\n                        onChange={this.changeHandler}\n                        placeholder='Describe your memory'\n                      />\n                    </form>\n                  </div>\n                  <div className='modal-footer'>\n                    <a\n                      className='modal-close waves-effect waves-red red btn-flat'\n                      onClick={this.Dismentle}>\n                      Cancel\n                    </a>\n                    <a\n                      className='modal-close waves-effect waves-green green btn-flat'\n                      onClick={this.UpdateMemory}>\n                      Update\n                    </a>\n                  </div>\n                </div>\n              </div>\n              <div className='col m6'>\n                <a className='btn' onClick={this.dltMemory}>\n                  <i className='material-icons'>delete</i>\n                </a>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}